<Window x:Class="UMLDiagrams.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:UMLDiagrams"
        xmlns:viewModel="clr-namespace:UMLDiagrams.ViewModel"
        xmlns:view="clr-namespace:UMLDiagrams.View"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:mvvm="http://www.galasoft.ch/mvvmlight"
        mc:Ignorable="d"
        Title="MainWindow" Height="600" Width="1000"
        WindowState="Maximized"
        d:DataContext="{d:DesignInstance viewModel:MainViewModel}">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/DesignerItem.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <DockPanel>
        <ToolBar Height="30" DockPanel.Dock="Top">
            <Button Content="New" Command = "{Binding Path = Clear}"/>
            <Button Content="Open" Command = "{Binding Path = Open}"/>
            <Button Content="Delete" Command="{Binding Path = Delete}"/>
            <Button Content="Save as Json" Command = "{Binding Path = SaveJsonDiagram}"/>
            <Button Content="Save as Png" Command = "{Binding Path = SavePngDiagram}"/>
            <Button Content="Build simple diagram" Command="{Binding Path = BuildDiagram}"/>
        </ToolBar>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <StackPanel Background="White" Grid.RowSpan="2">
                <TextBlock Text="Shapes" FontSize="18" TextAlignment="Center" />
                <Button Content="System"        Command = "{Binding Path = CreateSystem}"/>
                <Button Content="Initial Node"  Command = "{Binding Path = CreateInitialNode}"/>
                <Button Content="End Node"      Command = "{Binding Path = CreateEndNode}"/>
                <Button Content="Line"          Command = "{Binding Path = CreateLine}"/>
                <Button Content="Decision Node" Command = "{Binding Path = CreateDecisionNode}"/>
                <Button Content="Rectangle"     Command = "{Binding Path = CreateRectangle}"/>
                <Button Content="Use Case"      Command = "{Binding Path = CreateUseCase}"/>
                <Button Content="Action"        Command = "{Binding Path = CreateAction}"/>
                <Button Content="TextBox"       Command = "{Binding Path = CreateTextBox}"/>
                <Button Content="Actor"         Command = "{Binding Path = CreateActor}"/>
                <Button Content="Class"         Command="{Binding Path = CreateClass}"/>
                
                <Slider x:Name="ZoomSlider" Orientation="Horizontal"  Minimum="0.5" Maximum="5"/>
                    <!--Maximum="2.0"
                        LargeChange="0.5" SmallChange="0.1"  Value="1.0"-->
            </StackPanel>
            
            <GridSplitter Grid.Column="0" Focusable="False" Width="2" Background="#AAA"
                    VerticalAlignment="Stretch" HorizontalAlignment="Right"/>

            <Grid x:Name="grid" Grid.Column="1">
                <ItemsControl Height="Auto" Width="Auto" ItemsSource="{Binding Path= BaseShapeViewModels}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate x:Name="ITP">
                            <Canvas x:Name="MyCanvas" IsItemsHost="True"
                                    Height="2000" Width="3000"
                                    Loaded="My_Canvas_Loaded">

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseRightButtonDown">
                                        <mvvm:EventToCommand Command="{Binding AddNewLinePoint}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>

                                    <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                        <mvvm:EventToCommand Command="{Binding StartDrawnLine}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>

                                    <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                        <mvvm:EventToCommand Command="{Binding EndDrawnLine}"  PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>

                                <!--<Canvas.LayoutTransform>
                                    <MatrixTransform/>
                                </Canvas.LayoutTransform>-->
                                
                                <!--<Canvas.LayoutTransform >
                                    <ScaleTransform x:Name="st" />
                                </Canvas.LayoutTransform>-->

                                <Canvas.LayoutTransform>
                                    <ScaleTransform x:Name="st"
                                                    ScaleX="{Binding  ElementName=ZoomSlider, Path=Value}" 
                                                    ScaleY="{Binding ElementName=ZoomSlider, Path=Value}"/>
                                </Canvas.LayoutTransform>
                                
                            </Canvas>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>

                    <ItemsControl.Resources>
                        <DataTemplate DataType ="{x:Type viewModel:ConnectorViewModel}" >
                            <view:ConnectorComponentView/>
                        </DataTemplate>

                        <DataTemplate DataType="{x:Type viewModel:ConnectionViewModel}">
                            <view:ConnectionComponentView/>
                        </DataTemplate>
                        
                        <DataTemplate DataType="{x:Type viewModel:LinePointViewModel}">
                            <view:LinePointComponentView/>
                        </DataTemplate>
                        
                        <DataTemplate DataType="{x:Type viewModel:SystemViewModel}">
                            <view:SystemComponentView/>
                        </DataTemplate>

                        <DataTemplate DataType="{x:Type viewModel:ActorViewModel}">
                            <view:ActorComponentView/>
                        </DataTemplate>

                        <DataTemplate DataType="{x:Type viewModel:TextViewModel}">
                            <view:TextComponentView/>
                        </DataTemplate>

                        <DataTemplate DataType="{x:Type viewModel:ActionViewModel}">
                            <view:ActionComponentView/>
                        </DataTemplate>

                        <DataTemplate DataType="{x:Type viewModel:DecisionNodeViewModel}">
                            <view:DecisionNodeComponentView/>
                        </DataTemplate>
                        
                        <DataTemplate DataType="{x:Type viewModel:InitialNodeViewModel}">
                            <view:InitialNodeComponentView/>
                        </DataTemplate>

                        <DataTemplate DataType="{x:Type viewModel:EndNodeViewModel}">
                            <view:EndNodeComponentView/>
                        </DataTemplate>

                        <DataTemplate DataType="{x:Type viewModel:EllipseViewModel}">
                            <view:UseCaseComponentView/>
                        </DataTemplate>

                        <DataTemplate DataType="{x:Type viewModel:ClassViewModel}">
                            <view:DiagramClassComponentView/>
                        </DataTemplate>

                        <DataTemplate DataType="{x:Type viewModel:RectangleViewModel}">
                            <view:RectangleComponentView/>
                        </DataTemplate>
                    </ItemsControl.Resources>

                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="Canvas.Left" Value="{Binding Left, Mode = TwoWay}"/>
                            <Setter Property="Canvas.Top" Value="{Binding Top, Mode = TwoWay}"/>
                            <Setter Property="Width" Value="{Binding Width, Mode = TwoWay}"/>
                            <Setter Property="Height" Value="{Binding Height,Mode = TwoWay}"/>
                            <Setter Property="Panel.ZIndex" Value="{Binding ZIndex}"/>
                        </Style>
                    </ItemsControl.ItemContainerStyle>

                    <ItemsControl.Template>
                        <ControlTemplate TargetType = "ItemsControl">
                            <ScrollViewer x:Name="ScrollViewer"
                                          PreviewMouseWheel="ScrollViewer_MouseWheel"
                                          PreviewMouseLeftButtonDown="ScrollViewer_PreviewMouseLeftButtonDown"
                                          PreviewMouseLeftButtonUp="ScrollViewer_PreviewMouseLeftButtonUp"
                                          
                                          HorizontalScrollBarVisibility="Auto" 
                                          VerticalScrollBarVisibility="Auto">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </ControlTemplate>
                    </ItemsControl.Template>
                    
                </ItemsControl>
            </Grid>
        </Grid>
    </DockPanel>
</Window>